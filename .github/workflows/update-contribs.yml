name: Update External PRs

on:
  schedule:
    - cron: '0 6 * * *' # every day at 6 AM UTC
  workflow_dispatch:

permissions:
  contents: write  # needed to push changes

jobs:
  update-prs:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Fetch recent merged PRs using GraphQL
      - name: Fetch recent merged PRs
        id: fetch_prs
        uses: actions/github-script@v6
        with:
          script: |
            const query = `
              query ($login: String!) {
                user(login: $login) {
                  pullRequests(last: 5, states: MERGED, orderBy: {field: UPDATED_AT, direction: DESC}) {
                    nodes {
                      title
                      url
                      repository {
                        nameWithOwner
                      }
                    }
                  }
                }
              }
            `;

            const variables = { login: "hamzakhan977" };

            const response = await github.graphql(query, variables);

            const prs = response.user.pullRequests.nodes;

            if (!prs || prs.length === 0) {
              core.setOutput("content", "No recent contributions found.");
            } else {
              const list = prs.map(pr => `- [${pr.title}](${pr.url}) in **${pr.repository.nameWithOwner}**`);
              core.setOutput("content", list.join("\n"));
            }

      # 3. Insert PRs into README.md
      - name: Insert PRs into README
        run: |
          CONTENT="${{ steps.fetch_prs.outputs.content }}"
          START="<!-- external-prs:start -->"
          END="<!-- external-prs:end -->"

          TMP=$(mktemp)
          inside=0
          while IFS= read -r line || [[ -n "$line" ]]; do
            if [[ "$line" == "$START" ]]; then
              echo "$line" >> "$TMP"
              echo "$CONTENT" >> "$TMP"
              inside=1
              continue
            fi
            if [[ "$line" == "$END" ]]; then
              inside=0
            fi
            if [[ $inside -eq 0 ]]; then
              echo "$line" >> "$TMP"
            fi
          done < README.md

          mv "$TMP" README.md

      # 4. Commit and push changes
      - name: Commit & push changes
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git diff --quiet || git commit -m "docs: update recent merged PRs"
          git push
